"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useWebVitals = void 0;

var _webVitals = require("web-vitals");

var _react = require("react");

var noop = function noop() {};

var defaultReporter = function defaultReporter(_ref) {
  var name = _ref.name,
      value = _ref.value;
  var thresholds = {
    LCP: {
      title: 'Largest Contentful Paint',
      warn: 2500,
      error: 4000,
      unit: 'ms'
    },
    FID: {
      title: 'First Input Delay',
      warn: 100,
      error: 300,
      unit: 'ms'
    },
    CLS: {
      title: 'Cumalative Layout Shift',
      warn: 0.1,
      error: 0.25,
      unit: ''
    },
    FCP: {
      title: 'First Contentful Paint',
      warn: 2000,
      error: 4000,
      unit: 'ms'
    },
    TTFB: {
      title: 'Time To First Byte',
      warn: 200,
      error: 400,
      unit: 'ms'
    }
  };
  var _thresholds$name = thresholds[name],
      title = _thresholds$name.title,
      error = _thresholds$name.error,
      warn = _thresholds$name.warn,
      unit = _thresholds$name.unit;

  if (value > error) {
    console.error("Web Vitals Error: ".concat(title, " value is above ").concat(error).concat(unit, " (received ").concat(value).concat(unit, ")"));
    return;
  }

  if (value > warn) {
    console.error("Web Vitals Warning: ".concat(title, " value is above ").concat(warn).concat(unit, " (received ").concat(value).concat(unit, ")"));
  }
};

var useWebVitals = typeof window === 'undefined' ? noop : function () {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref2$reporter = _ref2.reporter,
      reporter = _ref2$reporter === void 0 ? defaultReporter : _ref2$reporter,
      _ref2$enabled = _ref2.enabled,
      enabled = _ref2$enabled === void 0 ? process.env.NODE_ENV !== 'production' : _ref2$enabled;

  (0, _react.useEffect)(function () {
    if (!enabled) {
      return;
    }

    (0, _webVitals.getCLS)(reporter);
    (0, _webVitals.getFID)(reporter);
    (0, _webVitals.getLCP)(reporter);
    (0, _webVitals.getFCP)(reporter);
    (0, _webVitals.getTTFB)(reporter);
  }, [enabled]);
};
exports.useWebVitals = useWebVitals;